import { SubContractStatus } from "../../enum";

export class ItemCreationDTO{
    itemName: string;
    itemCode: string;
    description: string;
    itemTypeId: number;
    brandId: number;
    categoryId: number;
    subCategoryId: number;
    seasonId: number;
    responsiblePersonId: number;
    productDesignerId: number;
    approver: number;
    productionMerchant: number;
    pdMerchant: number;
    factoryMerchant: number;
    salePersonId: number;
    styleNo: string;
    internalStyleId: number;
    uom: string;
    altUom: string;
    currency: string;
    targetCurrency: string;
    conversionFactorId: number;
    projectionOrderId: number;
    buyingHouseCommision: number;
    salePriceQty: number;
    licenseId: number;
    customGroupId: number;
    nationalDbk: number;
    roslGroup: number;
    isSubContract: SubContractStatus;
    salePrice: number;
    orderConfirmedDate: Date;
    firstExFactoryDate: Date;
    orderCloseDate: Date;
    moq: number;
    orderQty: number;
    facilityId: number;
    isActive: boolean;
    createdUser: string;
    updatedUser: string;
    versionFlag: number;
    fgitemId?:number;
    constructor(itemName: string,itemCode: string,description: string,itemTypeId: number,brandId: number,categoryId: number,subCategoryId: number,seasonId: number,responsiblePersonId: number,productDesignerId: number,approver: number,productionMerchant: number,pdMerchant: number,factoryMerchant: number,salePersonId: number,styleNo: string,internalStyleId: number,uom: string,altUom: string,currency: string,targetCurrency: string,conversionFactorId: number,projectionOrderId: number,buyingHouseCommision: number,salePriceQty: number,licenseId: number,customGroupId: number,nationalDbk: number,roslGroup: number,isSubContract: SubContractStatus,salePrice: number,orderConfirmedDate: Date,firstExFactoryDate: Date,orderCloseDate: Date,moq: number,orderQty: number,facilityId: number,isActive: boolean,createdUser: string,updatedUser: string,versionFlag: number,fgitemId?:number){
        this.itemName=itemName;
        this.itemCode=itemCode;
        this.description=description;
        this.itemTypeId=itemTypeId;
        this.brandId=brandId;
        this.categoryId=categoryId;
        this.subCategoryId=subCategoryId;
        this.seasonId=seasonId;
        this.responsiblePersonId=responsiblePersonId;
        this.productDesignerId=productDesignerId;
        this.approver=approver;
        this.productionMerchant=productionMerchant;
        this.pdMerchant=pdMerchant;
        this.factoryMerchant=factoryMerchant;
        this.salePersonId=salePersonId;
        this.styleNo=styleNo;
        this.internalStyleId=internalStyleId;
        this.uom=uom;
        this.altUom=altUom;
        this.currency=currency;
        this.targetCurrency=targetCurrency;
        this.conversionFactorId=conversionFactorId;
        this.projectionOrderId=projectionOrderId;
        this.buyingHouseCommision=buyingHouseCommision;
        this.salePriceQty=salePriceQty;
        this.licenseId=licenseId;
        this.customGroupId=customGroupId;
        this.nationalDbk=nationalDbk;
        this.roslGroup=roslGroup;
        this.isSubContract=isSubContract;
        this.salePrice=salePrice;
        this.orderConfirmedDate=orderConfirmedDate;
        this.firstExFactoryDate=firstExFactoryDate;
        this.orderCloseDate=orderCloseDate;
        this.moq=moq;
        this.orderQty=orderQty;
        this.facilityId=facilityId;
        this.isActive=isActive;
        this.createdUser=createdUser;
        this.updatedUser=updatedUser;
        this.versionFlag=versionFlag;
        this.fgitemId = fgitemId;
    }
}